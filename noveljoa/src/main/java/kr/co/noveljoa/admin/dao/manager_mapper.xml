<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.noveljoa.admin.Mapper">
  <select id="selectLogin" parameterType="kr.co.noveljoa.admin.vo.MLoginVO" resultType="kr.co.noveljoa.admin.domain.MLoginDomain">
    select id, create_date from manager where id = #{ id } and password = #{ password }
  </select>
  
<insert id="insertManager" parameterType="kr.co.noveljoa.admin.vo.InsertMVO">
insert into manager(id, password, create_date) values(#{ id }, #{ password }, sysdate)
</insert>

<select id="selectDash" resultType="kr.co.noveljoa.admin.domain.DashBoardDomain">
    SELECT
  (SELECT COUNT(*) FROM member) AS memberCnt,
  (SELECT COUNT(*) FROM NOVEL) AS novelCnt,
  (SELECT COUNT(*) FROM ( SELECT * FROM (SELECT to_char(JOIN,'yyyy-MM-DD') JOIN FROM MEMBER) )
	WHERE JOIN = TRUNC(SYSDATE)) AS todaySignUpCnt,
  (SELECT COUNT(*) FROM ( SELECT * FROM (SELECT to_char(visit,'yyyy-MM-DD') visit FROM history) )
	 WHERE visit = TRUNC(SYSDATE) ) AS todayVisitCnt,
	(SELECT COUNT(*) FROM ( SELECT * FROM (SELECT to_char(make,'yyyy-MM-DD') make FROM novel) )
	WHERE make = TRUNC(SYSDATE)) AS todayCreateNovelCnt,
	(SELECT COUNT(*) FROM ( SELECT * FROM (SELECT to_char(make,'yyyy-MM-DD') make FROM episode) )
	WHERE make = TRUNC(SYSDATE)) AS todayCreateEpCnt
FROM dual
</select>


<select id="selectAllMember" resultType="kr.co.noveljoa.admin.domain.MemberManageDomain">
SELECT m.id as id, m.num_member as num_member,
  (SELECT COUNT(*) FROM novel where num_member=m.num_member) AS novelcnt,
  NVL((SELECT MAX(h.visit) FROM history h WHERE m.num_member = h.num_member),m.join) AS visitDate,
  m.join as joinDate, m.stop AS susPeriod FROM member m CROSS JOIN dual
</select>

<select id="selectOneMember" resultType="kr.co.noveljoa.admin.domain.MemberManageDomain" parameterType="String">
 SELECT m.id as id, m.num_member as member,
  (SELECT COUNT(*) FROM novel where num_member=m.num_member) AS novelcnt,
  NVL((SELECT MAX(h.visit) FROM history h WHERE m.num_member = h.num_member),m.join) AS visitDate,
  m.join as joinDate, m.stop AS susPeriod FROM member m CROSS JOIN dual where id = #{ id }
</select>





  
  
</mapper>